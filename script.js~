
var beacons = [
    {label: "b1", x: 0, y: 300, color: "#2069ac", active: true, dist: 311.95},
    {label: "b2", x: 520, y: 0, color: "#358913", active: true, dist: 084.28},
    {label: "b3", x: 520, y: 640, color: "#b10292", active: true, dist: 127.44},
    {label: "b4", x: 866, y: 1000, color: "#b1a602", active: false},
    {label: "b5", x: 900, y: 300, color: "#b15402", active: false}
]

var particles = []; // format {x:43,y:32,p:0.5}

var position = {x: 838, y: 463, color: "rgba(255,0,0,0.5)"};

var esitmatedPosition = {x: 0, y: 0, color: "rgba(0,0,255,0.5)"};


var simulationParams = {
    noOfParticles: 10000,
    movementStdDev: 200, // simulate movement of the target in y direction with gaussian distribution of this st. dev.
    signalRelativeStdDev: 0.10, // signal/error standard deviation relative to distance
    showParticles: true
};

var beaconA = 10,
    beaconB = 10,
    beaconC = 10,
    index = 0;


var simulationSteps = {
    step: function () {
        this.simulateRead();
        this.predict();
        this.update();
        this.resample();
        this.guess();
    },
    run: function () {
        //setInterval(this.step.bind(this), 1000);
        for(i = 0; i<100; i++){
        //setTimeout(this.step(), i*100);
        this.step();
        }
    },
    // 1. Simulate reading from the beacons and movement of the target
    simulateRead: function () {
        // let's assume our target is moving in y direction
        position.y += randomFromGaussian(0, 15);
        position.y = 300;
        position.x = 346;
for (i = 0; i<3; i++){

        var rssi = data[index].rssi,
            dist = getDistance(rssi);

        switch(data[index].scanner_id){
            case 1:
                beaconA = dist;
                break;
            case 2:
                beaconB = dist;
                break;
            case 3:
                beaconC = dist;
                break;
        }

        index += 1;
        console.log("distance: " + dist + " beacon: " + data[index].scanner_id + " index: " + index);
}
        // read from beacons, simulate some noise
        activeBeacons().forEach(function (beacon) {
            var rand = randomFromGaussian(0, simulationParams.signalRelativeStdDev);
            beacon.measuredDistance = distance(beacon, position) * (1 + rand);
            beacon.measuredDistance = beacon.dist;
            switch(beacon.label){
                case "b1":
                    beacon.measuredDistance = beaconA;
                    break;
                case "b2":
                    beacon.measuredDistance = beaconB;
                    break;
                case "b3":
                    beacon.measuredDistance = beaconC;
                    break;
            }
        });

        draw();
    },
    // 2. Predict next position of each the particle
    // as we don't know direction or the speed of moving target we assume that it can move in every direction
    // according to some gaussian distribution, in future we could try to detect user movement based on other
    // sensors e.g. accelerometer
    predict: function () {
        particles.forEach(function (particle) {
            var movedParticle = randomPairFromGaussian(particle, simulationParams.movementStdDev);
            particle.x = movedParticle.x;
            particle.y = movedParticle.y;
        });
        draw();
    },
    // 3. Calculate probabilities for every particle
    update: function () {
        activeBeacons().forEach(function (beacon) {
            // let's assume that while we account for bigger error when the beacon is further from the particle
            var stdDev = beacon.measuredDistance * simulationParams.signalRelativeStdDev;
            var gaussian = new Gaussian(0, Math.pow(stdDev, 2));
            particles.forEach(function (particle) {
                var beaconParticleDistance = distance(beacon, particle);
                // calculate probability as CDF (cumulative distribution function) of
                // receiving reading from given beacon while being in the place of the particle
                // join probabilities for all beacons by multiplying
                // TODO: verify if the CDF is correct function to use here
                // TODO: verify if it's OK to multiply probabilities
                particle.p *= gaussian.cdf(-1 * Math.abs(beaconParticleDistance - beacon.measuredDistance));
            });
        });
        // normalize sum of all probabilities to 1
        var pSum = 0;
        particles.forEach(function (particle) {
            pSum += particle.p;
        });
        particles.forEach(function (particle) {
            particle.p = particle.p / pSum;
        });
        draw();
    },
    // 4. resample particles based on probabilties
    resample: function () {
        // see. http://robotics.stackexchange.com/questions/479/particle-filters-how-to-do-resampling
        // calculate sums
        particles.sort(function (a, b) {
            return a.p - b.p;
        });
        var cumulativeSums = [];
        for (var i = 0; i < particles.length; i++) {
            var p = particles[i].p;
            if (cumulativeSums.length == 0) {
                cumulativeSums.push(p);
            } else {
                cumulativeSums.push(cumulativeSums[i - 1] + p)
            }
        }
        // rasample
        var oldParticles = particles;
        particles = [];
        oldParticles.forEach(function (particle) {
            var random = Math.random();
            var previousBin = 0;

            // TODO: binary search here
            var i = 0;
            for (; i < cumulativeSums.length; i++) {
                if (random > previousBin && random < cumulativeSums[i]) {
                    break;
                }
                previousBin = cumulativeSums[i];
            }
            particles.push({
                x: oldParticles[i].x,
                y: oldParticles[i].y,
                p: oldParticles[i].p
            })
        });
        draw();

    },
    //5. average over all points to get our estimated position
    guess: function () {
        esitmatedPosition.x = 0;
        esitmatedPosition.y = 0;
        particles.forEach(function (particle) {
            esitmatedPosition.x += particle.x;
            esitmatedPosition.y += particle.y;
        });
        esitmatedPosition.x /= particles.length;
        esitmatedPosition.y /= particles.length;
        draw();
    },
    noOfParticles: 500
};

function getDistance(rssi) {
    var txPower = -59,
        accuracy = 0;

  if (rssi == 0) {
    return -1.0; // if we cannot determine accuracy, return -1.
  }

  var ratio = rssi*1.0/txPower;
  if (ratio < 1.0) {
    accuracy =  Math.pow(ratio,10);
  }
  else {
        accuracy =  (0.89976)*Math.pow(ratio,7.7095) + 0.111;
  }
    var dist = accuracy*accuracy-3*3;
    return accuracy * 100;
    if(dist <= 0){
    return 1*100;
    } else  {
    return Math.sqrt(dist) * 100;
    }
}  


function main() {
    var gui = new dat.GUI();


    var folder = gui.addFolder("simulation");
    folder.add(simulationParams, "showParticles").onChange(draw);
    folder.add(simulationParams, "movementStdDev").onChange(draw);
    folder.add(simulationParams, "signalRelativeStdDev", 0.01, 1).onChange(draw);
    folder.add(simulationSteps, "run");
    folder.add(simulationSteps, "step");
    folder.add(simulationSteps, "simulateRead");
    folder.add(simulationSteps, "predict");
    folder.add(simulationSteps, "update");
    folder.add(simulationSteps, "resample");
    folder.add(simulationSteps, "guess");
    folder.open();

    var folder = gui.addFolder("position");
    folder.add(position, "x", 0, canvas().width).onChange(draw);
    folder.add(position, "y", 0, canvas().height).onChange(draw);
    folder.addColor(position, "color").onChange(draw);

    beacons.forEach(function (beacon) {
        var folder = gui.addFolder(beacon.label);
        folder.add(beacon, "active").onChange(draw);
        folder.add(beacon, "x", 0, canvas().width).onChange(draw);
        folder.add(beacon, "y", 0, canvas().height).onChange(draw);
        folder.addColor(beacon, "color").onChange(draw);
    });


    for (var i = 0; i < simulationParams.noOfParticles; i++) {
        particles.push({
                x: randomIntFromInterval(0, window.innerWidth),
                y: randomIntFromInterval(0, window.innerHeight),
                p: 1
            }
        );
    }
    draw();

    document.getElementById('showInstructionsButton').onclick = showInstructions;
    document.getElementById('hideInstructionsButton').onclick = hideInstructions;

}

function activeBeacons() {
    return beacons.filter(function (beacon) {
        return beacon.active;
    });
}

function canvas() {
    return document.getElementById('canvas');
}

errorlog = -1;

function draw() {
    var ctx = canvas().getContext('2d');
    ctx.canvas.width = window.innerWidth;
    ctx.canvas.height = window.innerHeight;
    ctx.clearRect(0, 0, canvas().width, canvas().height)
    activeBeacons().forEach(function (beacon) {
        drawPoint(ctx, beacon.x, beacon.y, beacon.label, beacon.color);
        var radius = beacon.measuredDistance;
        drawCircle(ctx, beacon.x, beacon.y, radius, beacon.color);
    });


    // particles
    if (simulationParams.showParticles) {
        var pMin = 1;
        var pMax = 0;
        particles.forEach(function (particle) {
            if (particle.p > pMax) pMax = particle.p;
            if (particle.p < pMin) pMin = particle.p;
        });
        var pRange = pMax - pMin;
        particles.forEach(function (particle) {
            var color;
            if (pMin == pMax) {
                color = "#000000";
            } else {
                var gray = Math.floor(220 - 220 * (particle.p - pMin) / pRange);
                color = "rgb(" + gray + "," + gray + "," + gray + ")"
            }
            drawParticle(ctx, particle.x, particle.y, color);
        });
    }
    drawPoint(ctx, position.x, position.y, "X", position.color);
    //console.log("POSITION X: " +  position.x + ", " + position.y);
    //console.log("POSITION E: " +  esitmatedPosition.x + ", " + esitmatedPosition.y);
    disterr = Math.sqrt(Math.pow(Math.abs(position.x-esitmatedPosition.x), 2)+Math.pow(Math.abs(position.y-esitmatedPosition.y), 2))    
    if(errorlog == 4){
    console.log(disterr);
    errorlog = 0;
    }else{
    errorlog++;
    }
    drawPoint(ctx, esitmatedPosition.x, esitmatedPosition.y, "E", esitmatedPosition.color);
}

function distance(a, b) {
    return Math.sqrt(distanceSquared(a, b));
}

function distanceSquared(a, b) {
    return Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2);
}


function drawCircle(ctx, x, y, radius, color) {
    var maXRadius = 2000; //browser may throw errors for big radius
    if (radius > maXRadius) {
        return;
    }
    ctx.lineWidth = 1;
    ctx.strokeStyle = color;
    ctx.setLineDash([2, 3]);
    ctx.beginPath();
    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);
    ctx.closePath();
    ctx.stroke();
}

function drawPoint(ctx, x, y, label, color) {
    ctx.beginPath();
    var radius = 11;
    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);
    ctx.closePath();
    ctx.fillStyle = color;
    ctx.fill();
    ctx.fillStyle = "#ffffff";
    ctx.font = "12px Arial";
    var metrics = ctx.measureText(label);
    ctx.fillText(label, x - metrics.width / 2, y + 12 / 1.25 / 2);
}

function drawParticle(ctx, x, y, color) {
    ctx.fillStyle = color;
    var particleWidth = 4;
    ctx.fillRect(x - particleWidth / 2, y - particleWidth / 2, particleWidth, particleWidth);
}
// see http://jsfiddle.net/alanwsmith/GfAhy/
function randomIntFromInterval(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
}

// Box-Muller method
// see http://stackoverflow.com/questions/9951883/generating-values-from-normal-distribution-using-box-muller-method
function randomPairFromGaussian(mean, stdev) {
    var u = Math.random();
    var v = Math.random();
    return{
        x: mean.x + Math.sqrt(-2 * Math.log(u)) * Math.sin(2 * Math.PI * v) * stdev,
        y: mean.y + Math.sqrt(-2 * Math.log(u)) * Math.cos(2 * Math.PI * v) * stdev
    }
}

// see http://www.protonfish.com/random.shtml
function rnd_snd() {
    return (Math.random() * 2 - 1) + (Math.random() * 2 - 1) + (Math.random() * 2 - 1);
}

function randomFromGaussian(mean, stdev) {
    return rnd_snd() * stdev + mean;
}

function showInstructions() {
    document.getElementById('instructions').style.visibility = 'visible';
}

function hideInstructions() {
    document.getElementById('instructions').style.visibility = 'hidden';
}

function get_distance(rssi) {
    txPower = -63;

  if (rssi == 0) {
    return -1.0; // if we cannot determine accuracy, return -1.
  }

  ratio = rssi*1.0/txPower;
  if (ratio < 1.0) {
    return Math.pow(ratio,10);
  }
  else {
    distance =  (0.89976)*Math.pow(ratio,7.7095) + 0.111;    
    console.log(distance);
    //reduce to 2D using Pythagoras and vertical difference of the beaconss of 3m 
    
    twod_distance = Math.sqrt(Math.pow(distance, 2)-Math.pow(3, 2));
    //console.log(twod_distance);
    if(twod_distance >0){
        return twod_distance;
    }
    
  }
}

data = [{"scanner_id": 1, "timestamp": 1457378750, "cart_id": 18, "rssi": -58},
 {"scanner_id": 3, "timestamp": 1457378750, "cart_id": 18, "rssi": -79},
 {"scanner_id": 2, "timestamp": 1457378751, "cart_id": 18, "rssi": -60},
 {"scanner_id": 1, "timestamp": 1457378753, "cart_id": 18, "rssi": -56},
 {"scanner_id": 3, "timestamp": 1457378753, "cart_id": 18, "rssi": -80},
 {"scanner_id": 2, "timestamp": 1457378754, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378756, "cart_id": 18, "rssi": -61},
 {"scanner_id": 2, "timestamp": 1457378757, "cart_id": 18, "rssi": -82},
 {"scanner_id": 1, "timestamp": 1457378760, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378760, "cart_id": 18, "rssi": -75},
 {"scanner_id": 2, "timestamp": 1457378761, "cart_id": 18, "rssi": -74},
 {"scanner_id": 1, "timestamp": 1457378763, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378763, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378764, "cart_id": 18, "rssi": -66},
 {"scanner_id": 1, "timestamp": 1457378766, "cart_id": 18, "rssi": -58},
 {"scanner_id": 3, "timestamp": 1457378766, "cart_id": 18, "rssi": -82},
 {"scanner_id": 2, "timestamp": 1457378767, "cart_id": 18, "rssi": -61},
 {"scanner_id": 1, "timestamp": 1457378770, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378770, "cart_id": 18, "rssi": -69},
 {"scanner_id": 2, "timestamp": 1457378771, "cart_id": 18, "rssi": -62},
 {"scanner_id": 1, "timestamp": 1457378773, "cart_id": 18, "rssi": -53},
 {"scanner_id": 3, "timestamp": 1457378773, "cart_id": 18, "rssi": -56},
 {"scanner_id": 2, "timestamp": 1457378774, "cart_id": 18, "rssi": -60},
 {"scanner_id": 1, "timestamp": 1457378776, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378776, "cart_id": 18, "rssi": -60},
 {"scanner_id": 2, "timestamp": 1457378777, "cart_id": 18, "rssi": -67},
 {"scanner_id": 1, "timestamp": 1457378779, "cart_id": 18, "rssi": -73},
 {"scanner_id": 3, "timestamp": 1457378780, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378780, "cart_id": 18, "rssi": -66},
 {"scanner_id": 1, "timestamp": 1457378783, "cart_id": 18, "rssi": -68},
 {"scanner_id": 3, "timestamp": 1457378783, "cart_id": 18, "rssi": -54},
 {"scanner_id": 2, "timestamp": 1457378784, "cart_id": 18, "rssi": -68},
 {"scanner_id": 1, "timestamp": 1457378786, "cart_id": 18, "rssi": -60},
 {"scanner_id": 3, "timestamp": 1457378786, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378787, "cart_id": 18, "rssi": -80},
 {"scanner_id": 1, "timestamp": 1457378789, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378790, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457378790, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457378793, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378793, "cart_id": 18, "rssi": -78},
 {"scanner_id": 2, "timestamp": 1457378794, "cart_id": 18, "rssi": -66},
 {"scanner_id": 1, "timestamp": 1457378796, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378796, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378797, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457378799, "cart_id": 18, "rssi": -70},
 {"scanner_id": 3, "timestamp": 1457378799, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378800, "cart_id": 18, "rssi": -72},
 {"scanner_id": 1, "timestamp": 1457378803, "cart_id": 18, "rssi": -68},
 {"scanner_id": 3, "timestamp": 1457378803, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378804, "cart_id": 18, "rssi": -69},
 {"scanner_id": 1, "timestamp": 1457378806, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378806, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378807, "cart_id": 18, "rssi": -82},
 {"scanner_id": 1, "timestamp": 1457378809, "cart_id": 18, "rssi": -68},
 {"scanner_id": 3, "timestamp": 1457378809, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457378810, "cart_id": 18, "rssi": -70},
 {"scanner_id": 1, "timestamp": 1457378812, "cart_id": 18, "rssi": -67},
 {"scanner_id": 3, "timestamp": 1457378813, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378813, "cart_id": 18, "rssi": -70},
 {"scanner_id": 1, "timestamp": 1457378816, "cart_id": 18, "rssi": -78},
 {"scanner_id": 3, "timestamp": 1457378816, "cart_id": 18, "rssi": -71},
 {"scanner_id": 2, "timestamp": 1457378817, "cart_id": 18, "rssi": -69},
 {"scanner_id": 1, "timestamp": 1457378819, "cart_id": 18, "rssi": -67},
 {"scanner_id": 3, "timestamp": 1457378819, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378820, "cart_id": 18, "rssi": -67},
 {"scanner_id": 1, "timestamp": 1457378822, "cart_id": 18, "rssi": -57},
 {"scanner_id": 3, "timestamp": 1457378823, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457378823, "cart_id": 18, "rssi": -70},
 {"scanner_id": 1, "timestamp": 1457378826, "cart_id": 18, "rssi": -59},
 {"scanner_id": 3, "timestamp": 1457378826, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378827, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378829, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378829, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378830, "cart_id": 18, "rssi": -71},
 {"scanner_id": 1, "timestamp": 1457378832, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378832, "cart_id": 18, "rssi": -61},
 {"scanner_id": 2, "timestamp": 1457378833, "cart_id": 18, "rssi": -72},
 {"scanner_id": 1, "timestamp": 1457378836, "cart_id": 18, "rssi": -66},
 {"scanner_id": 3, "timestamp": 1457378836, "cart_id": 18, "rssi": -61},
 {"scanner_id": 2, "timestamp": 1457378837, "cart_id": 18, "rssi": -62},
 {"scanner_id": 1, "timestamp": 1457378839, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378839, "cart_id": 18, "rssi": -60},
 {"scanner_id": 2, "timestamp": 1457378840, "cart_id": 18, "rssi": -59},
 {"scanner_id": 1, "timestamp": 1457378842, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378842, "cart_id": 18, "rssi": -60},
 {"scanner_id": 2, "timestamp": 1457378843, "cart_id": 18, "rssi": -60},
 {"scanner_id": 1, "timestamp": 1457378846, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378846, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378846, "cart_id": 18, "rssi": -68},
 {"scanner_id": 1, "timestamp": 1457378849, "cart_id": 18, "rssi": -69},
 {"scanner_id": 3, "timestamp": 1457378849, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378850, "cart_id": 18, "rssi": -62},
 {"scanner_id": 1, "timestamp": 1457378852, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378852, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457378853, "cart_id": 18, "rssi": -61},
 {"scanner_id": 1, "timestamp": 1457378855, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378856, "cart_id": 18, "rssi": -58},
 {"scanner_id": 2, "timestamp": 1457378856, "cart_id": 18, "rssi": -71},
 {"scanner_id": 1, "timestamp": 1457378859, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378859, "cart_id": 18, "rssi": -84},
 {"scanner_id": 2, "timestamp": 1457378860, "cart_id": 18, "rssi": -55},
 {"scanner_id": 1, "timestamp": 1457378862, "cart_id": 18, "rssi": -66},
 {"scanner_id": 3, "timestamp": 1457378862, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457378863, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457378865, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378865, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378866, "cart_id": 18, "rssi": -54},
 {"scanner_id": 1, "timestamp": 1457378869, "cart_id": 18, "rssi": -69},
 {"scanner_id": 3, "timestamp": 1457378869, "cart_id": 18, "rssi": -58},
 {"scanner_id": 2, "timestamp": 1457378870, "cart_id": 18, "rssi": -61},
 {"scanner_id": 1, "timestamp": 1457378872, "cart_id": 18, "rssi": -65},
 {"scanner_id": 3, "timestamp": 1457378872, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378873, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378875, "cart_id": 18, "rssi": -67},
 {"scanner_id": 3, "timestamp": 1457378875, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378876, "cart_id": 18, "rssi": -54},
 {"scanner_id": 1, "timestamp": 1457378879, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378879, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378882, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378882, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378883, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457378885, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378885, "cart_id": 18, "rssi": -70},
 {"scanner_id": 2, "timestamp": 1457378886, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378889, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378889, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378889, "cart_id": 18, "rssi": -54},
 {"scanner_id": 2, "timestamp": 1457378893, "cart_id": 18, "rssi": -61},
 {"scanner_id": 1, "timestamp": 1457378895, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378896, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378898, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378899, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378899, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378902, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378902, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378903, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378905, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378905, "cart_id": 18, "rssi": -69},
 {"scanner_id": 2, "timestamp": 1457378906, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378908, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378908, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378909, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378912, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378912, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378912, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378915, "cart_id": 18, "rssi": -57},
 {"scanner_id": 1, "timestamp": 1457378915, "cart_id": 18, "rssi": -70},
 {"scanner_id": 2, "timestamp": 1457378916, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378918, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378918, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457378919, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378921, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378922, "cart_id": 18, "rssi": -72},
 {"scanner_id": 2, "timestamp": 1457378922, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457378925, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457378925, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457378926, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378928, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378928, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457378929, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378931, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378931, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378932, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378935, "cart_id": 18, "rssi": -57},
 {"scanner_id": 1, "timestamp": 1457378935, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378936, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457378938, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378938, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457378939, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378941, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378941, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457378942, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378945, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378945, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457378945, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457378948, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378948, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378949, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378951, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378951, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378952, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378955, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457378955, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457378955, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378958, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378958, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457378959, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378961, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378961, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378962, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457378964, "cart_id": 18, "rssi": -57},
 {"scanner_id": 1, "timestamp": 1457378965, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378965, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378968, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378968, "cart_id": 18, "rssi": -70},
 {"scanner_id": 2, "timestamp": 1457378969, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457378971, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378971, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378972, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457378974, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378974, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378975, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378978, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378978, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378978, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378981, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378981, "cart_id": 18, "rssi": -69},
 {"scanner_id": 2, "timestamp": 1457378982, "cart_id": 18, "rssi": -60},
 {"scanner_id": 3, "timestamp": 1457378984, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378984, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378985, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457378988, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378988, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457378988, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378991, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378991, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457378992, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457378994, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457378994, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378995, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457378997, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457378998, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457378998, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457379001, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379001, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457379002, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379004, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379004, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457379005, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457379007, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379008, "cart_id": 18, "rssi": -65},
 {"scanner_id": 3, "timestamp": 1457379011, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379011, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379011, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457379014, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379014, "cart_id": 18, "rssi": -70},
 {"scanner_id": 2, "timestamp": 1457379015, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457379017, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379017, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379018, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457379021, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379021, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457379021, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379024, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379024, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457379025, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457379027, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379027, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457379028, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379030, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457379031, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457379031, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379034, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379034, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457379035, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379037, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379037, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457379038, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379040, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379041, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457379041, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379044, "cart_id": 18, "rssi": -57},
 {"scanner_id": 1, "timestamp": 1457379044, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457379044, "cart_id": 18, "rssi": -63},
 {"scanner_id": 3, "timestamp": 1457379047, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379047, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457379048, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379050, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379050, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457379051, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379054, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379054, "cart_id": 18, "rssi": -68},
 {"scanner_id": 2, "timestamp": 1457379054, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379057, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379057, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379058, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457379060, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457379060, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379061, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457379063, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379064, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379064, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379067, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457379067, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379068, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379070, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379070, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379071, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457379073, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379074, "cart_id": 18, "rssi": -69},
 {"scanner_id": 2, "timestamp": 1457379074, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379077, "cart_id": 18, "rssi": -66},
 {"scanner_id": 1, "timestamp": 1457379077, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457379077, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379080, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379080, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379081, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457379083, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457379084, "cart_id": 18, "rssi": -64},
 {"scanner_id": 2, "timestamp": 1457379084, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457379087, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379087, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457379087, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379090, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379090, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379091, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457379093, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379093, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379094, "cart_id": 18, "rssi": -61},
 {"scanner_id": 3, "timestamp": 1457379096, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379097, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457379097, "cart_id": 18, "rssi": -64},
 {"scanner_id": 3, "timestamp": 1457379100, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457379100, "cart_id": 18, "rssi": -69},
 {"scanner_id": 2, "timestamp": 1457379101, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379103, "cart_id": 18, "rssi": -58},
 {"scanner_id": 1, "timestamp": 1457379103, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379104, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379106, "cart_id": 18, "rssi": -63},
 {"scanner_id": 1, "timestamp": 1457379107, "cart_id": 18, "rssi": -66},
 {"scanner_id": 2, "timestamp": 1457379107, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457379110, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379110, "cart_id": 18, "rssi": -65},
 {"scanner_id": 2, "timestamp": 1457379111, "cart_id": 18, "rssi": -56},
 {"scanner_id": 3, "timestamp": 1457379113, "cart_id": 18, "rssi": -67},
 {"scanner_id": 1, "timestamp": 1457379113, "cart_id": 18, "rssi": -63},
 {"scanner_id": 2, "timestamp": 1457379114, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379116, "cart_id": 18, "rssi": -64},
 {"scanner_id": 1, "timestamp": 1457379117, "cart_id": 18, "rssi": -70},
 {"scanner_id": 2, "timestamp": 1457379117, "cart_id": 18, "rssi": -54},
 {"scanner_id": 3, "timestamp": 1457379119, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379120, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379120, "cart_id": 18, "rssi": -55},
 {"scanner_id": 3, "timestamp": 1457379123, "cart_id": 18, "rssi": -78},
 {"scanner_id": 1, "timestamp": 1457379123, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379124, "cart_id": 18, "rssi": -62},
 {"scanner_id": 3, "timestamp": 1457379126, "cart_id": 18, "rssi": -65},
 {"scanner_id": 1, "timestamp": 1457379127, "cart_id": 18, "rssi": -71},
 {"scanner_id": 2, "timestamp": 1457379127, "cart_id": 18, "rssi": -69},
 {"scanner_id": 3, "timestamp": 1457379129, "cart_id": 18, "rssi": -62},
 {"scanner_id": 1, "timestamp": 1457379130, "cart_id": 18, "rssi": -74},
 {"scanner_id": 2, "timestamp": 1457379130, "cart_id": 18, "rssi": -65},
 {"scanner_id": 3, "timestamp": 1457379133, "cart_id": 18, "rssi": -72},
 {"scanner_id": 1, "timestamp": 1457379133, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379134, "cart_id": 18, "rssi": -74},
 {"scanner_id": 3, "timestamp": 1457379136, "cart_id": 18, "rssi": -69},
 {"scanner_id": 1, "timestamp": 1457379136, "cart_id": 18, "rssi": -72},
 {"scanner_id": 2, "timestamp": 1457379137, "cart_id": 18, "rssi": -66},
 {"scanner_id": 3, "timestamp": 1457379139, "cart_id": 18, "rssi": -80},
 {"scanner_id": 1, "timestamp": 1457379140, "cart_id": 18, "rssi": -70},
 {"scanner_id": 2, "timestamp": 1457379140, "cart_id": 18, "rssi": -68},
 {"scanner_id": 3, "timestamp": 1457379143, "cart_id": 18, "rssi": -66},
 {"scanner_id": 1, "timestamp": 1457379143, "cart_id": 18, "rssi": -67},
 {"scanner_id": 2, "timestamp": 1457379143, "cart_id": 18, "rssi": -68},
 {"scanner_id": 3, "timestamp": 1457379146, "cart_id": 18, "rssi": -75},
 {"scanner_id": 1, "timestamp": 1457379146, "cart_id": 18, "rssi": -62},
 {"scanner_id": 2, "timestamp": 1457379147, "cart_id": 18, "rssi": -72}];

